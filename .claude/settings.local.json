{
  "permissions": {
    "allow": [
      "Bash(bash .claude/scripts/test-and-log.sh:*)",
      "Bash(.claude/scripts/test-and-log.sh:*)",
      "Bash(bash .claude/scripts/pm/*)",
      "Bash(.claude/scripts/pm/*)",
      "Bash(cat:*)",
      "Bash(cat:*)",
      "Bash(composer:*)",
      "Bash(fi)",
      "Bash(find:*)",
      "Bash(gh:*)",
      "Bash(git:*)",
      "Bash(grep:*)",
      "Bash(kill:*)",
      "Bash(ln:*)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(pnpm:*)",
      "Bash(pytest:*)",
      "Bash(python:*)",
      "Bash(mvn:*)",
      "Bash(gradle:*)",
      "Bash(dotnet:*)",
      "Bash(cargo:*)",
      "Bash(go:*)",
      "Bash(swift:*)",
      "Bash(flutter:*)",
      "Bash(bundle:*)",
      "Bash(ctest:*)",
      "Bash(make:*)",
      "Bash(rm:*)",
      "Bash(ruff:*)",
      "Bash(sed:*)",
      "Bash(touch:*)",
      "Bash(tree:*)",
      "List(**)",
      "WebFetch(domain:github.com)",
      "WebSearch",
      "Bash(mkdir:*)",
      "SlashCommand(/pm:issue-analyze:*)",
      "Bash(test -f backend/src/routes/parser.ts)",
      "Bash(bash:*)",
      "Bash(dir:*)",
      "Bash(for:*)",
      "Bash(done)",
      "Bash(while read f)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(head:*)",
      "Bash(test:*)",
      "Bash(taskkill:*)",
      "Bash(cmd /c:*)",
      "Bash(curl -X POST http://localhost:3001/api/ai/query -H \"Content-Type: application/json\" -d \"{\"\"selectedText\"\":\"\"test\"\",\"\"settings\"\":{\"\"model\"\":\"\"gpt-3.5-turbo\"\",\"\"temperature\"\":0.7,\"\"maxTokens\"\":100}}\")",
      "Bash(curl -X POST http://localhost:3001/api/ai/query -H \"Content-Type: application/json\" -d \"{\"\"selectedText\"\":\"\"what is 2+2\"\",\"\"settings\"\":{\"\"model\"\":\"\"gpt-3.5-turbo\"\",\"\"temperature\"\":0.7,\"\"maxTokens\"\":100}}\")",
      "Bash(timeout:*)",
      "Bash(curl -X POST http://localhost:3001/api/ai/query -H \"Content-Type: application/json\" -d \"{\"\"selectedText\"\":\"\"what is 2+2\"\",\"\"settings\"\":{\"\"model\"\":\"\"gemini-pro\"\",\"\"temperature\"\":0.7,\"\"maxTokens\"\":100}}\")",
      "Bash(netstat:*)",
      "Bash(findstr:*)"
    ]
  }
}
